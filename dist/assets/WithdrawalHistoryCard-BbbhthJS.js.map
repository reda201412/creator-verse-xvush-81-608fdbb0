{"version":3,"file":"WithdrawalHistoryCard-BbbhthJS.js","sources":["../../node_modules/lucide-react/dist/esm/icons/ban.js","../../src/components/creator/WithdrawalHistoryCard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Ban = createLucideIcon(\"Ban\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m4.9 4.9 14.2 14.2\", key: \"1m5liu\" }]\n]);\n\nexport { Ban as default };\n//# sourceMappingURL=ban.js.map\n","\r\nimport React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { \r\n  Table, \r\n  TableBody, \r\n  TableCell, \r\n  TableHead, \r\n  TableHeader, \r\n  TableRow \r\n} from '@/components/ui/table';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { useTronWallet } from '@/hooks/use-tron-wallet';\r\nimport { ArrowUpRight, Ban, Check, Clock, ExternalLink } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\n\r\n// Types de données pour les retraits\r\ninterface Withdrawal {\r\n  id: string;\r\n  date: string;\r\n  amount: number;\r\n  status: 'pending' | 'completed' | 'failed';\r\n  txHash?: string;\r\n}\r\n\r\nconst WithdrawalHistoryCard: React.FC = () => {\r\n  const [withdrawDialogOpen, setWithdrawDialogOpen] = useState(false);\r\n  const [amount, setAmount] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const { requestWithdrawal } = useTronWallet();\r\n  \r\n  // Données mockées d'historique de retraits\r\n  const withdrawalHistory: Withdrawal[] = [\r\n    {\r\n      id: 'w1',\r\n      date: '2023-11-01T14:32:00Z',\r\n      amount: 520,\r\n      status: 'completed',\r\n      txHash: 'TRX123456789abcdef'\r\n    },\r\n    {\r\n      id: 'w2',\r\n      date: '2023-10-15T09:12:00Z',\r\n      amount: 430,\r\n      status: 'completed',\r\n      txHash: 'TRX987654321fedcba'\r\n    },\r\n    {\r\n      id: 'w3',\r\n      date: '2023-09-28T16:45:00Z',\r\n      amount: 300,\r\n      status: 'completed',\r\n      txHash: 'TRXabcdef123456789'\r\n    },\r\n    {\r\n      id: 'w4',\r\n      date: '2023-12-05T10:21:00Z',\r\n      amount: 650,\r\n      status: 'pending'\r\n    }\r\n  ];\r\n  \r\n  const handleWithdraw = async () => {\r\n    if (!amount || !address) {\r\n      toast.error(\"Veuillez remplir tous les champs\");\r\n      return;\r\n    }\r\n    \r\n    const amountValue = parseFloat(amount);\r\n    if (isNaN(amountValue) || amountValue <= 0) {\r\n      toast.error(\"Veuillez entrer un montant valide\");\r\n      return;\r\n    }\r\n    \r\n    setIsProcessing(true);\r\n    try {\r\n      await requestWithdrawal({\r\n        amount: amountValue,\r\n        destinationAddress: address\r\n      });\r\n      \r\n      toast.success(\"Demande de retrait soumise avec succès\");\r\n      setWithdrawDialogOpen(false);\r\n      setAmount('');\r\n      setAddress('');\r\n    } catch (error) {\r\n      toast.error(\"Erreur lors de la demande de retrait\");\r\n      console.error(error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n  \r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-green-500/20 text-green-500 border-0\">\r\n            <Check className=\"h-3 w-3 mr-1\" />\r\n            Complété\r\n          </Badge>\r\n        );\r\n      case 'pending':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-amber-500/20 text-amber-500 border-0\">\r\n            <Clock className=\"h-3 w-3 mr-1\" />\r\n            En attente\r\n          </Badge>\r\n        );\r\n      case 'failed':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-red-500/20 text-red-500 border-0\">\r\n            <Ban className=\"h-3 w-3 mr-1\" />\r\n            Échoué\r\n          </Badge>\r\n        );\r\n      default:\r\n        return <Badge>{status}</Badge>;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n          <CardTitle className=\"text-base\">Historique des retraits</CardTitle>\r\n          <Button size=\"sm\" onClick={() => setWithdrawDialogOpen(true)}>\r\n            <ArrowUpRight className=\"h-4 w-4 mr-1\" /> \r\n            Demander un retrait\r\n          </Button>\r\n        </CardHeader>\r\n        \r\n        <CardContent>\r\n          {withdrawalHistory.length > 0 ? (\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Date</TableHead>\r\n                  <TableHead>Montant</TableHead>\r\n                  <TableHead>Statut</TableHead>\r\n                  <TableHead className=\"text-right\">Détails</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {withdrawalHistory.map((withdrawal) => (\r\n                  <TableRow key={withdrawal.id}>\r\n                    <TableCell className=\"font-medium\">\r\n                      {new Date(withdrawal.date).toLocaleDateString()}\r\n                    </TableCell>\r\n                    <TableCell>${withdrawal.amount}</TableCell>\r\n                    <TableCell>{getStatusBadge(withdrawal.status)}</TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      {withdrawal.txHash ? (\r\n                        <Button \r\n                          variant=\"ghost\" \r\n                          size=\"sm\"\r\n                          asChild\r\n                        >\r\n                          <a \r\n                            href={`https://tronscan.org/#/transaction/${withdrawal.txHash}`} \r\n                            target=\"_blank\" \r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"flex items-center gap-1\"\r\n                          >\r\n                            <ExternalLink className=\"h-3 w-3\" />\r\n                            Tronscan\r\n                          </a>\r\n                        </Button>\r\n                      ) : (\r\n                        <span className=\"text-muted-foreground text-sm\">-</span>\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <div className=\"text-center py-6\">\r\n              <p className=\"text-muted-foreground\">Aucun retrait effectué pour le moment</p>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n      \r\n      {/* Modale de demande de retrait */}\r\n      <Dialog open={withdrawDialogOpen} onOpenChange={setWithdrawDialogOpen}>\r\n        <DialogContent className=\"sm:max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle>Demande de retrait</DialogTitle>\r\n          </DialogHeader>\r\n          \r\n          <div className=\"space-y-4 py-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"amount\">Montant à retirer (USDT)</Label>\r\n              <Input \r\n                id=\"amount\" \r\n                type=\"number\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                placeholder=\"Entrez le montant\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n              />\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                Minimum: 10 USDT. Frais de transaction: 1 USDT.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"address\">Adresse TRON de destination</Label>\r\n              <Input \r\n                id=\"address\" \r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                placeholder=\"Entrez votre adresse TRON (commence par T)\"\r\n              />\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                Assurez-vous que l'adresse est correcte. Les transactions sur la blockchain sont irréversibles.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setWithdrawDialogOpen(false)}>\r\n              Annuler\r\n            </Button>\r\n            <Button \r\n              onClick={handleWithdraw}\r\n              disabled={isProcessing || !amount || !address}\r\n            >\r\n              {isProcessing ? (\r\n                <>\r\n                  <div className=\"h-4 w-4 border-2 border-current border-t-transparent animate-spin rounded-full mr-2\"></div>\r\n                  Traitement...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ArrowUpRight className=\"h-4 w-4 mr-1\" />\r\n                  Demander le retrait\r\n                </>\r\n              )}\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WithdrawalHistoryCard;\r\n"],"names":["Ban","createLucideIcon","WithdrawalHistoryCard","withdrawDialogOpen","setWithdrawDialogOpen","useState","amount","setAmount","address","setAddress","isProcessing","setIsProcessing","requestWithdrawal","useTronWallet","withdrawalHistory","handleWithdraw","toast","amountValue","error","getStatusBadge","status","jsxs","Badge","jsx","Check","Clock","Fragment","Card","CardHeader","CardTitle","Button","ArrowUpRight","CardContent","Table","TableHeader","TableRow","TableHead","TableBody","withdrawal","TableCell","ExternalLink","Dialog","DialogContent","DialogHeader","DialogTitle","Label","Input","e","DialogFooter"],"mappings":"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","x_google_ignoreList":[0]}